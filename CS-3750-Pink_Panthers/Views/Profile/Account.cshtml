@model Pink_Panthers_Project.Models.CourseView

@{
    ViewData["Title"] = "Account";
    Layout = "_Layout";
    int creditHours = 0;
}

    <div class="container mt-5">
        <div class="row justify-content-center">

            @if (Model != null && !Model.Account!.isTeacher)
            {
                @foreach (var course in Model.RegisteredCourses!)
                {
                    creditHours += course.hours;
                }
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header text-center" style="color: black;">
                            Account Balance
                        </div>
                        <div class="card-body">
                            <p>Total Credit Hours: @creditHours</p>
                            <p>Total Cost: $@String.Format("{0:0.00}", Model.Account!.AmountToBePaid)</p>
                            <form onsubmit="return validatePaymentAmount()" method="post">
                                <div class="form-group">
                                    <label for="cardName">Name on Card<span style="color: red;">*</span></label>
                                    <input type="text" class="form-control" id="cardName" name="cardName" required>
                                </div>
                                <div class="form-group">
                                    <label for="cardNumber">Card Number<span style="color: red;">*</span></label>
                                    <input type="text" class="form-control" id="cardNumber" name="cardNumber" required pattern="\d{4}-\d{4}-\d{4}-\d{4}" oninvalid="setCustomValidity('Please enter a valid 16-digit card number (numeric only).')"
                                           oninput="setCustomValidity('')" onkeyup="autoFormatCardNumber(this)">
                                </div>
                                <div class="form-group">
                                    <label for="cardExpiration">Expiration Date<span style="color: red;">*</span></label>
                                    <div class="row">
                                        <div class="col">
                                            <select class="form-control" id="cardExpirationMonth" name="cardExpirationMonth" required>
                                                <option value="01">January - 01</option>
                                                <option value="02">February - 02</option>
                                                <option value="03">March - 03</option>
                                                <option value="04">April - 04</option>
                                                <option value="05">May - 05</option>
                                                <option value="06">June - 06</option>
                                                <option value="07">July - 07</option>
                                                <option value="08">August - 08</option>
                                                <option value="09">September - 09</option>
                                                <option value="10">October - 10</option>
                                                <option value="11">November - 11</option>
                                                <option value="12">December - 12</option>
                                            </select>
                                        </div>
                                        <div class="col">
                                            <select class="form-control" id="cardExpirationYear" name="cardExpirationYear" required>
                                                @for (int year = DateTime.Now.Year; year <= DateTime.Now.Year + 50; year++)
                                                {
                                                    <option value="@year">@year</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="cvv">CVV<span style="color: red;">*</span></label>
                                    <input type="text" class="form-control" id="cvv" name="cvv" required pattern="\d{3}" oninvalid="setCustomValidity('Please enter a valid 3-digit CVV code (numeric only).')"
                                           oninput="setCustomValidity('')">
                                </div>
                                <div class="form-group">
                                    <label for="amountToPay">Amount to Pay<span style="color: red;">*</span></label>
                                    <input type="number" class="form-control" id="amountToPay" name="amountToPay" value="@creditHours * 100" step="0.01" required min="0.01">
                                </div>
                                <div class="form-group text-center">
                                    <button type="submit" class="btn btn-primary" style="margin-top: 5px;">Pay Now</button>
                                </div>
                            </form>

                        </div>
                    </div>
                </div>

            }
        </div>
    </div>

<script>
    function autoFormatCardNumber(input)
    {
        // Remove all non-numeric characters
        const cardNumber = input.value.replace(/\D/g, '');

        // Format the card number with hyphens
        const formattedCardNumber = cardNumber.replace(/(\d{4})(?=\d)/g, '$1-');

        // Update the input field with the formatted number
        input.value = formattedCardNumber;
    }
</script>

<script>
    function validatePaymentAmount()
    {
        const totalCost = @Html.ValueFor(ac => ac.Account!.AmountToBePaid); // Calculate the total cost
        const paymentAmount = parseFloat(document.getElementById('amountToPay').value);

        if (paymentAmount > totalCost) {
            // Display an error message
            alert('Payment amount cannot exceed the total cost.');
            return false; // Prevent form submission
        }

        return true; // Allow form submission
    }
</script>